{"version":3,"file":"static/js/232.fa347163.chunk.js","mappings":"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","sources":["components/ModalLayout/ModalLayout.jsx","utils/replaceStarsOnNumbersCard.js","webpack://game_store/./src/components/OrderPageComponents/PaymentForm/Card/Card.module.scss?7e39","components/OrderPageComponents/PaymentForm/Card/Card.jsx","webpack://game_store/./src/components/OrderPageComponents/PaymentForm/PaymentForm.module.scss?6d69","utils/formattingDate.js","components/OrderPageComponents/PaymentForm/Form/Form.jsx","components/OrderPageComponents/PaymentForm/PaymentForm.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Dialog} from '@headlessui/react'\r\n\r\nimport {MotionMain} from \"../MotionMain\";\r\n\r\nconst ModalLayout = ({show, setShow, children, bg, content, modal}) => {\r\n  return (\r\n      <Dialog\r\n        open = {show}\r\n        onClose = {() => setShow(false)} className = {modal}>\r\n        <MotionMain\r\n              initial={{ opacity: 0, scale: 0 }}\r\n              transition = {{ duration: 0.5, ease: 'linear' }}\r\n              animate={{ opacity: 1,scale: 1 }}\r\n               classname = {bg}>\r\n            <Dialog.Panel className = {content}>\r\n              {children}\r\n            </Dialog.Panel>\r\n        </MotionMain>\r\n      </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalLayout;","export const replaceStarsOnNumbersCard =(numberCard) => {\r\n  const arr = ['*', '*', '*', '*', ' ', '*', '*', '*', '*', ' ', '*', '*', '*', '*', ' ', '*', '*', '*', '*']\r\n  if(numberCard){\r\n    for(let i = 0; i < numberCard.length; i++){\r\n      arr[i] = numberCard[i]\r\n    }\r\n  }\r\n  return arr.join('')\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"App\":\"Card_App__F0TXy\",\"visually-hidden\":\"Card_visually-hidden__YURq0\",\"card-chip\":\"Card_card-chip__Nm3LH\",\"card-bg\":\"Card_card-bg__TPesI\",\"card-back\":\"Card_card-back__JNzv9\",\"card\":\"Card_card__OPEXH\",\"card-inner\":\"Card_card-inner__gwnN1\",\"turned\":\"Card_turned__A8EUc\",\"card-front\":\"Card_card-front__JUMDH\",\"card-glow\":\"Card_card-glow__LWGJX\",\"card-contactless\":\"Card_card-contactless__T4PCn\",\"card-holder\":\"Card_card-holder__1YWIy\",\"card-number\":\"Card_card-number__58Ufy\",\"card-valid\":\"Card_card-valid__rm-Ip\",\"card-signature\":\"Card_card-signature__Krjx8\",\"card-seccode\":\"Card_card-seccode__LxdSz\",\"logo\":\"Card_logo__Fk+De\"};","import React from 'react';\r\n\r\nimport {replaceStarsOnNumbersCard} from \"utils/replaceStarsOnNumbersCard\";\r\n\r\nimport cn from './Card.module.scss'\r\nimport usePaymentContext from \"../hooks/usePaymentContext\";\r\n\r\n\r\nconst Card = () => {\r\n\r\n  const {numberCard, name, ccv, turnClass, cardValidityPeriod} = usePaymentContext()\r\n\r\n  const defaultProp = (prop, value) => {\r\n    return !!prop ? prop : value\r\n  }\r\n\r\n  const {year, month} = cardValidityPeriod;\r\n\r\n  return (\r\n    <div className = {cn.card}>\r\n      <div className = {`${cn[\"card-inner\"]} ${cn[turnClass]}`} >\r\n        <div className = {cn[\"card-front\"]}>\r\n          <div className = {cn[\"card-bg\"]}></div>\r\n          <div className = {cn[\"card-glow\"]}></div>\r\n          <div className = {cn[\"card-contactless\"]}>\r\n            <svg xmlns = \"http://www.w3.org/2000/svg\" width = \"46\" height = \"56\">\r\n              <path\r\n                fill = \"none\"\r\n                stroke = \"#f9f9f9\"\r\n                strokeWidth = \"6\"\r\n                strokeLinecap = \"round\"\r\n                d = \"m35,3a50,50 0 0,1 0,50M24,8.5a39,39 0 0,1 0,39M13.5,13.55a28.2,28.5\r\n  0 0,1 0,28.5M3,19a18,17 0 0,1 0,18\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div className = {cn[\"card-chip\"]}></div>\r\n          <div className = {cn[\"card-holder\"]}>{defaultProp(name,'john dow')}</div>\r\n          <div className = {cn[\"card-number\"]}>{replaceStarsOnNumbersCard(numberCard)}</div>\r\n          <div className = {cn[\"card-valid\"]}>{defaultProp(month,'month')}/{defaultProp(year,'year')}</div>\r\n        </div>\r\n        <div className = {cn[\"card-back\"]}>\r\n          <div className = {cn[\"card-signature\"]}>{defaultProp(name,'john dow')}</div>\r\n          <div className = {cn[\"card-seccode\"]}>{defaultProp(ccv,'***')}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","// extracted by mini-css-extract-plugin\nexport default {\"App\":\"PaymentForm_App__lTd-u\",\"visually-hidden\":\"PaymentForm_visually-hidden__rw7Co\",\"wrapper\":\"PaymentForm_wrapper__lHJVU\",\"bg\":\"PaymentForm_bg__mOdR2\",\"content\":\"PaymentForm_content__yaqd7\",\"card\":\"PaymentForm_card__8gAjf\",\"card__info\":\"PaymentForm_card__info__+HPy-\",\"error\":\"PaymentForm_error__rj0hX\",\"selects-wrapper\":\"PaymentForm_selects-wrapper__S66qk\",\"select\":\"PaymentForm_select__kRXoQ\",\"valid-title\":\"PaymentForm_valid-title__jqIIS\",\"ccv\":\"PaymentForm_ccv__Ptt2E\",\"btn-submit\":\"PaymentForm_btn-submit__QKuhV\",\"pulse\":\"PaymentForm_pulse__boSGn\"};","export const renderOptionMonths = Array(12)\r\n  .fill(0)\r\n  .map((item, index) => <option key = {index}\r\n                                value = {`${index + 1}`.padStart(2, '0')}>{`${index + 1}`.padStart(2, '0')}</option>)\r\n\r\nexport const renderOptionYears = Array(10)\r\n  .fill(new Date().getFullYear())\r\n  .map((item, index) => <option key = {index} value = {`${item + index}`}>{`${item + index}`}</option>)\r\n\r\n\r\nexport const dateNow = `${new Date().getFullYear()}-${(new Date().getMonth() + 1).toString().padStart(2, '0')}`","import React from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nimport cn from \"../PaymentForm.module.scss\";\r\nimport {dateNow, renderOptionMonths, renderOptionYears} from \"utils/formattingDate\";\r\nimport usePaymentContext from \"../hooks/usePaymentContext\";\r\n\r\nconst Form = () => {\r\n  let {\r\n    register,\r\n    formState: {\r\n      errors, isValid\r\n    },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm({\r\n      mode: 'onBlur',\r\n      defaultValues: {\r\n        cardNumber: '',\r\n        name: '',\r\n        ccv: '',\r\n        cardValidityPeriod: {\r\n          month: '',\r\n          year: ''\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const {\r\n    numberCard,\r\n    name,\r\n    ccv,\r\n    setCcv,\r\n    setName,\r\n    handleSetCardNumber,\r\n    handleFocus,\r\n    handleBlur,\r\n    cardValidityPeriod,\r\n    setCardValidityPeriod,\r\n    setIsShowPaymentForm,\r\n    setShowConfirmModal\r\n  } = usePaymentContext()\r\n\r\n\r\n  const onSubmit = () => {\r\n    setIsShowPaymentForm(false)\r\n    setShowConfirmModal(true);\r\n    reset();\r\n  }\r\n\r\n  const setNameField = (e) => {\r\n    let value = e.target.value.replace(/[^a-zA-Z]+/g, '')\r\n    setName(value)\r\n  }\r\n\r\n    const validDate = () => {\r\n        const {year,month} = cardValidityPeriod;\r\n        const [currentYear,currentMonth] = dateNow.split('-');\r\n        if(year && month){\r\n          return (month && year > currentYear) || (month >= currentMonth && year >= currentYear);\r\n        }\r\n    }\r\n\r\n   const getErrors = () => {\r\n     if (validDate()) {\r\n       const {month, year, ...rest} = errors;\r\n       errors = {...rest}\r\n     }\r\n     return errors\r\n   }\r\n\r\n  return (\r\n    <form onSubmit = {handleSubmit(onSubmit)}>\r\n      <label htmlFor = \"\">\r\n        <input type = \"tel\"\r\n               inputMode = \"numeric\"\r\n               autoComplete = \"cc-number\"\r\n               value = {numberCard}\r\n               placeholder = {'xxxx xxxx xxxx xxxx'}\r\n               {...register('cardNumber', {\r\n                 required: \"The field is required\",\r\n                 onChange: handleSetCardNumber,\r\n                 pattern: {\r\n                   value: /[\\d| ]{19}/,\r\n                   message: 'The card number must contain 16 digits'\r\n                 }\r\n               })}\r\n        />\r\n      </label>\r\n      <div className = {cn.error}>{errors?.cardNumber &&\r\n        <p>{errors?.cardNumber?.message || 'you have entered incorrect data'}</p>}</div>\r\n      <p className = {cn['valid-title']}>valid thru</p>\r\n      <div className = {cn['selects-wrapper']}>\r\n        <select\r\n          className = {cn.select}\r\n          {...register('month', {\r\n            required: \"The fields is required\",\r\n            onChange: (e) => setCardValidityPeriod({...cardValidityPeriod,month: e.target.value}),\r\n            validate: {\r\n              validateNumber: () => validDate(),\r\n            },\r\n          })}\r\n        >\r\n          <option value = \"\" disabled = \"\">month</option>\r\n          {renderOptionMonths}\r\n        </select>\r\n        <select\r\n          className = {cn.select}\r\n          {...register('year', {\r\n            required: \"The fields is required\",\r\n            onChange: (e) => setCardValidityPeriod({...cardValidityPeriod,year: e.target.value}),\r\n            validate: {\r\n              validateNumber: () => validDate(),\r\n            },\r\n\r\n          })}\r\n        >\r\n          <option value = \"\" disabled=\"\">year</option>\r\n          {renderOptionYears}\r\n        </select>\r\n      </div>\r\n      <div className = {cn.error}>\r\n        {(getErrors()?.month || getErrors()?.year) &&\r\n        <p>{errors?.month?.message || errors?.year?.message || 'check and re-enter the month and year in both fields'}</p>}\r\n        </div>\r\n      <label htmlFor = \"\">\r\n        <input type = \"text\"\r\n               inputMode = \"text\"\r\n               value = {name}\r\n               placeholder = \"name\"\r\n               {...register('name', {\r\n                 required: \"The field is required\",\r\n                 onChange: setNameField,\r\n                 minLength: {\r\n                   value: 2,\r\n                   message: 'The name field must contain more than 2 character'\r\n                 },\r\n                 pattern: {\r\n                   value: /[a-zA-Z]/,\r\n                   message: 'Only Latin characters are allowed'\r\n                 }\r\n               })}\r\n        />\r\n      </label>\r\n      <div className = {cn.error}>{errors?.name &&\r\n        <p>{errors?.name?.message || 'you have entered incorrect data'}</p>}</div>\r\n      <label htmlFor = \"\">\r\n        <input type = \"text\"\r\n               className = {cn.ccv}\r\n               inputMode = \"numeric\"\r\n               placeholder = \"ccv\"\r\n               value = {ccv}\r\n               onFocus = {handleFocus}\r\n               {...register('ccv', {\r\n                 required: \"The field is required\",\r\n                 onChange: setCcv,\r\n                 onBlur: handleBlur,\r\n                 maxLength: {\r\n                   value: 3,\r\n                   message: 'The card number must contain 3 digits'\r\n                 },\r\n                 minLength: {\r\n                   value: 3,\r\n                   message: 'The card number must contain 3 digits'\r\n                 },\r\n               })}\r\n        />\r\n      </label>\r\n      <div className = {cn.error}>{errors?.ccv &&\r\n        <p>{errors?.ccv?.message || 'you have entered incorrect data'}</p>}</div>\r\n      <button title = \"Pay\" onSubmit = {handleSubmit(onSubmit)} className = {cn['btn-submit']} type = \"submit\"\r\n              disabled={!isValid}\r\n             >\r\n        pay\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nimport {ModalLayout} from \"../../ModalLayout\";\r\n\r\nimport {Card} from \"./Card\";\r\nimport {Form} from \"./Form\";\r\nimport cn from './PaymentForm.module.scss'\r\nimport usePaymentContext from \"./hooks/usePaymentContext\";\r\n\r\n\r\nconst PaymentForm = () => {\r\n\r\n  const {isShowPaymentForm,setIsShowPaymentForm} = usePaymentContext()\r\n\r\n  return (\r\n    <div className = {cn.wrapper}>\r\n      <ModalLayout bg = {cn.bg} content = {cn.content} show = {isShowPaymentForm}\r\n                   setShow = {() => setIsShowPaymentForm(false)} modal = {cn.wrapper}>\r\n        <Card />\r\n        <Form />\r\n      </ModalLayout>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default PaymentForm;"],"names":["show","setShow","children","bg","content","modal","open","onClose","className","MotionMain","initial","opacity","scale","transition","duration","ease","animate","classname","replaceStarsOnNumbersCard","numberCard","arr","i","length","join","usePaymentContext","name","ccv","turnClass","cardValidityPeriod","defaultProp","prop","value","year","month","cn","xmlns","width","height","fill","stroke","strokeWidth","strokeLinecap","d","renderOptionMonths","Array","map","item","index","padStart","renderOptionYears","Date","getFullYear","dateNow","getMonth","toString","useForm","mode","defaultValues","cardNumber","register","formState","errors","isValid","handleSubmit","reset","setCcv","setName","handleSetCardNumber","handleFocus","handleBlur","setCardValidityPeriod","setIsShowPaymentForm","setShowConfirmModal","onSubmit","validDate","split","currentYear","currentMonth","getErrors","rest","htmlFor","type","inputMode","autoComplete","placeholder","required","onChange","pattern","message","e","target","validate","validateNumber","disabled","replace","minLength","onFocus","onBlur","maxLength","title","isShowPaymentForm","ModalLayout"],"sourceRoot":""}