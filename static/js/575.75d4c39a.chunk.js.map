{"version":3,"file":"static/js/575.75d4c39a.chunk.js","mappings":"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","sources":["components/ModalLayout/ModalLayout.jsx","utils/replaceStarsOnNumbersCard.js","webpack://game_store/./src/components/OrderPageComponents/PaymentForm/Card/Card.module.scss?7e39","components/OrderPageComponents/PaymentForm/Card/Card.jsx","webpack://game_store/./src/components/OrderPageComponents/PaymentForm/PaymentForm.module.scss?6d69","components/OrderPageComponents/PaymentForm/Form/renderOptions.jsx","components/OrderPageComponents/PaymentForm/Form/Form.jsx","components/OrderPageComponents/PaymentForm/hook/usePayment.jsx","utils/normalizeCardNumber.js","components/OrderPageComponents/PaymentForm/PaymentForm.jsx"],"sourcesContent":["import React from 'react';\r\nimport {Dialog} from '@headlessui/react'\r\n\r\nimport {MotionMain} from \"../MotionMain\";\r\n\r\nconst ModalLayout = ({show, setShow, children, bg, content, modal}) => {\r\n  return (\r\n      <Dialog\r\n        open = {show}\r\n        onClose = {() => setShow(false)} className = {modal}>\r\n        <MotionMain\r\n              initial={{ opacity: 0, scale: 0 }}\r\n              transition = {{ duration: 0.5, ease: 'linear' }}\r\n              animate={{ opacity: 1,scale: 1 }}\r\n               classname = {bg}>\r\n            <Dialog.Panel className = {content}>\r\n              {children}\r\n            </Dialog.Panel>\r\n        </MotionMain>\r\n      </Dialog>\r\n  );\r\n};\r\n\r\nexport default ModalLayout;","export const replaceStarsOnNumbersCard =(numberCard) => {\r\n  const arr = ['*', '*', '*', '*', ' ', '*', '*', '*', '*', ' ', '*', '*', '*', '*', ' ', '*', '*', '*', '*']\r\n  if(numberCard){\r\n    for(let i = 0; i < numberCard.length; i++){\r\n      arr[i] = numberCard[i]\r\n    }\r\n  }\r\n  return arr.join('')\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"App\":\"Card_App__F0TXy\",\"visually-hidden\":\"Card_visually-hidden__YURq0\",\"card-chip\":\"Card_card-chip__Nm3LH\",\"card-bg\":\"Card_card-bg__TPesI\",\"card-back\":\"Card_card-back__JNzv9\",\"card\":\"Card_card__OPEXH\",\"card-inner\":\"Card_card-inner__gwnN1\",\"turned\":\"Card_turned__A8EUc\",\"card-front\":\"Card_card-front__JUMDH\",\"card-glow\":\"Card_card-glow__LWGJX\",\"card-contactless\":\"Card_card-contactless__T4PCn\",\"card-holder\":\"Card_card-holder__1YWIy\",\"card-number\":\"Card_card-number__58Ufy\",\"card-valid\":\"Card_card-valid__rm-Ip\",\"card-signature\":\"Card_card-signature__Krjx8\",\"card-seccode\":\"Card_card-seccode__LxdSz\",\"logo\":\"Card_logo__Fk+De\"};","import React from 'react';\r\n\r\nimport {replaceStarsOnNumbersCard} from \"utils/replaceStarsOnNumbersCard\";\r\n\r\nimport cn from './Card.module.scss'\r\n\r\n\r\nconst Card = ({numberCard, month, year, name, ccv, turnClass}) => {\r\n\r\n  const defaultProp = (prop, value) => {\r\n    return !!prop ? prop : value\r\n  }\r\n\r\n  return (\r\n    <div className = {cn.card}>\r\n      <div className = {`${cn[\"card-inner\"]} ${cn[turnClass]}`} >\r\n        <div className = {cn[\"card-front\"]}>\r\n          <div className = {cn[\"card-bg\"]}></div>\r\n          <div className = {cn[\"card-glow\"]}></div>\r\n          <div className = {cn[\"card-contactless\"]}>\r\n            <svg xmlns = \"http://www.w3.org/2000/svg\" width = \"46\" height = \"56\">\r\n              <path\r\n                fill = \"none\"\r\n                stroke = \"#f9f9f9\"\r\n                strokeWidth = \"6\"\r\n                strokeLinecap = \"round\"\r\n                d = \"m35,3a50,50 0 0,1 0,50M24,8.5a39,39 0 0,1 0,39M13.5,13.55a28.2,28.5\r\n  0 0,1 0,28.5M3,19a18,17 0 0,1 0,18\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div className = {cn[\"card-chip\"]}></div>\r\n          <div className = {cn[\"card-holder\"]}>{defaultProp(name,'john dow')}</div>\r\n          <div className = {cn[\"card-number\"]}>{replaceStarsOnNumbersCard(numberCard)}</div>\r\n          <div className = {cn[\"card-valid\"]}>{defaultProp(month,'month')}/{defaultProp(year,'year')}</div>\r\n        </div>\r\n        <div className = {cn[\"card-back\"]}>\r\n          <div className = {cn[\"card-signature\"]}>{defaultProp(name,'john dow')}</div>\r\n          <div className = {cn[\"card-seccode\"]}>{defaultProp(ccv,'***')}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","// extracted by mini-css-extract-plugin\nexport default {\"App\":\"PaymentForm_App__lTd-u\",\"visually-hidden\":\"PaymentForm_visually-hidden__rw7Co\",\"wrapper\":\"PaymentForm_wrapper__lHJVU\",\"bg\":\"PaymentForm_bg__mOdR2\",\"content\":\"PaymentForm_content__yaqd7\",\"card\":\"PaymentForm_card__8gAjf\",\"card__info\":\"PaymentForm_card__info__+HPy-\",\"error\":\"PaymentForm_error__rj0hX\",\"selects-wrapper\":\"PaymentForm_selects-wrapper__S66qk\",\"select\":\"PaymentForm_select__kRXoQ\",\"valid-title\":\"PaymentForm_valid-title__jqIIS\",\"ccv\":\"PaymentForm_ccv__Ptt2E\",\"btn-submit\":\"PaymentForm_btn-submit__QKuhV\",\"pulse\":\"PaymentForm_pulse__boSGn\"};","import React from \"react\";\r\n\r\nexport const renderOptionMonths = Array(12)\r\n  .fill(0)\r\n  .map((item, index) => <option key = {index}\r\n                                value = {`${index + 1}`.padStart(2, '0')}>{`${index + 1}`.padStart(2, '0')}</option>)\r\n\r\nexport const renderOptionYears = Array(10)\r\n  .fill(new Date().getFullYear())\r\n  .map((item, index) => <option key = {index} value = {`${item + index}`}>{`${item + index}`}</option>)","import React from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nimport cn from \"../PaymentForm.module.scss\";\r\n\r\nimport {renderOptionMonths, renderOptionYears} from \"./renderOptions\";\r\n\r\n\r\nconst Form = (props) => {\r\n  const {\r\n    register,\r\n    formState: {\r\n      errors, isValid\r\n    },\r\n    handleSubmit,\r\n    reset,\r\n  } = useForm({\r\n      mode: 'onBlur',\r\n      defaultValues: {\r\n        cardNumber: '',\r\n        name: '',\r\n        ccv: '',\r\n        month: '',\r\n        year: ''\r\n      }\r\n    }\r\n  );\r\n\r\n  const {\r\n    numberCard,\r\n    name,\r\n    month,\r\n    ccv,\r\n    setCcv,\r\n    setMonth,\r\n    setYear,\r\n    setName,\r\n    handleSetCardNumber,\r\n    handleFocus,\r\n    handleBlur,\r\n    setShowModal,\r\n    setShowConfirmModal\r\n  } = props\r\n\r\n\r\n  const onSubmit = () => {\r\n    setShowModal(false);\r\n    setShowConfirmModal(true);\r\n    reset();\r\n  }\r\n\r\n  const setNameField = (e) => {\r\n    let value = e.target.value.replace(/[^a-zA-Z]+/g, '')\r\n    setName(value)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit = {handleSubmit(onSubmit)}>\r\n      <label htmlFor = \"\">\r\n        <input type = \"tel\"\r\n               inputMode = \"numeric\"\r\n               autoComplete = \"cc-number\"\r\n               value = {numberCard}\r\n               placeholder = {'xxxx xxxx xxxx xxxx'}\r\n               {...register('cardNumber', {\r\n                 required: \"The field is required\",\r\n                 onChange: handleSetCardNumber,\r\n                 maxLength: {\r\n                   value: 19,\r\n                   message: 'The card number must contain 16 digits'\r\n                 },\r\n                 minLength: {\r\n                   value: 19,\r\n                   message: 'The card number must contain 16 digits'\r\n                 },\r\n                 pattern: {\r\n                   value: /[\\d| ]{19}/,\r\n                   message: 'Only numbers are allowed for this field'\r\n                 }\r\n               })}\r\n        />\r\n      </label>\r\n      <div className = {cn.error}>{errors?.cardNumber &&\r\n        <p>{errors?.cardNumber?.message || 'you have entered incorrect data'}</p>}</div>\r\n      <p className = {cn['valid-title']}>valid thru</p>\r\n      <div className = {cn['selects-wrapper']}>\r\n        <select\r\n          className = {cn.select}\r\n          {...register('month', {\r\n            required: \"The field month is required\",\r\n            onChange: (e) => setMonth(e.target.value),\r\n            validate: {\r\n              positive: () => parseInt(month) > new Date().getMonth(),\r\n            },\r\n            pattern: {\r\n              value: /[\\d| ]{2}/,\r\n              message: 'select a month'\r\n            }\r\n          })}\r\n        >\r\n          <option value = \"\" disabled>month</option>\r\n          {renderOptionMonths}\r\n        </select>\r\n        <select\r\n          className = {cn.select}\r\n          {...register('year', {\r\n            required: \"The field year is required\",\r\n            onChange: (e) => setYear(e.target.value),\r\n            pattern: {\r\n              value: /[\\d| ]{4}/,\r\n              message: 'select a year'\r\n            }\r\n          })}\r\n        >\r\n          <option value = \"\" disabled>year</option>\r\n          {renderOptionYears}\r\n        </select>\r\n      </div>\r\n      <div className = {cn.error}>\r\n        {(errors?.month || errors?.year) && <p>{(errors?.year?.message) || 'you have entered incorrect data'}</p>}</div>\r\n      <label htmlFor = \"\">\r\n        <input type = \"text\"\r\n               inputMode = \"text\"\r\n               value = {name}\r\n               placeholder = \"name\"\r\n               {...register('name', {\r\n                 required: \"The field is required\",\r\n                 onChange: setNameField,\r\n                 minLength: {\r\n                   value: 2,\r\n                   message: 'The name field must contain more than 2 character'\r\n                 },\r\n                 pattern: {\r\n                   value: /[a-zA-Z]/,\r\n                   message: 'Only Latin characters are allowed'\r\n                 }\r\n               })}\r\n        />\r\n      </label>\r\n      <div className = {cn.error}>{errors?.name &&\r\n        <p>{errors?.name?.message || 'you have entered incorrect data'}</p>}</div>\r\n      <label htmlFor = \"\">\r\n        <input type = \"text\"\r\n               className = {cn.ccv}\r\n               inputMode = \"numeric\"\r\n               placeholder = \"ccv\"\r\n               value = {ccv}\r\n               onFocus = {handleFocus}\r\n               {...register('ccv', {\r\n                 required: \"The field is required\",\r\n                 onChange: setCcv,\r\n                 onBlur: handleBlur,\r\n                 maxLength: {\r\n                   value: 3,\r\n                   message: 'The card number must contain 3 digits'\r\n                 },\r\n                 minLength: {\r\n                   value: 3,\r\n                   message: 'The card number must contain 3 digits'\r\n                 },\r\n               })}\r\n        />\r\n      </label>\r\n      <div className = {cn.error}>{errors?.ccv &&\r\n        <p>{errors?.ccv?.message || 'you have entered incorrect data'}</p>}</div>\r\n      <button title = \"Pay\" onSubmit = {handleSubmit(onSubmit)} className = {cn['btn-submit']} type = \"submit\"\r\n              disabled = {!isValid}>\r\n        pay\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;","import {useState} from 'react';\r\n\r\nimport {normalizeCardNumber} from \"utils/normalizeCardNumber\";\r\n\r\nconst usePayment = () => {\r\n\r\n  const [numberCard, setNumberCard] = useState('');\r\n  const [month, setMonth] = useState('month');\r\n  const [year, setYear] = useState('year');\r\n  const [name, setName] = useState('');\r\n  const [ccv, setValueCcv] = useState('');\r\n  const [turnClass, setTurnCLass] = useState('');\r\n\r\n  const handleFocus = () => {\r\n    setTurnCLass('turned')\r\n  }\r\n\r\n  const handleBlur = () => {\r\n    setTurnCLass('')\r\n  }\r\n\r\n  const handleSetCardNumber = (e) => {\r\n    const {value} = e.target\r\n    e.target.value = normalizeCardNumber(value);\r\n    setNumberCard(e.target.value)\r\n  }\r\n\r\n  const setCcv = (e) => {\r\n    let value = e.target?.value.replace(/[^\\d]/g,'').slice(0,3)\r\n    setValueCcv(value)\r\n  }\r\n\r\n  return {\r\n    numberCard,\r\n    month,\r\n    year,\r\n    name,\r\n    ccv,\r\n    turnClass,\r\n    setNumberCard,\r\n    setMonth,\r\n    setCcv,\r\n    setYear,\r\n    setName,\r\n    handleSetCardNumber,\r\n    handleFocus,\r\n    handleBlur,\r\n  };\r\n};\r\n\r\nexport default usePayment;","export const normalizeCardNumber = (value) => {\r\n  return value.replace(/[^\\d]/g,'').match(/.{1,4}/g)?.join(\" \").substring(0, 19) || \"\"\r\n}","import React from 'react';\r\n\r\nimport {ModalLayout} from \"../../ModalLayout\";\r\n\r\nimport {Card} from \"./Card\";\r\nimport {Form} from \"./Form\";\r\nimport cn from './PaymentForm.module.scss'\r\nimport usePayment from \"./hook/usePayment\";\r\n\r\n\r\nconst PaymentForm = ({showModal, setShowModal, setShowConfirmModal}) => {\r\n\r\n  const {turnClass,...restProps} = usePayment();\r\n  const {numberCard,month, year, name, ccv} = restProps;\r\n\r\n  const formProps = {\r\n    setShowModal,\r\n    setShowConfirmModal,\r\n    ...restProps\r\n  }\r\n\r\n  return (\r\n    <div className = {cn.wrapper}>\r\n      <ModalLayout bg = {cn.bg} content = {cn.content} show = {showModal}\r\n                   setShow = {() => setShowModal(false)} modal = {cn.wrapper}>\r\n        <Card numberCard = {numberCard} month = {month} year = {year} name = {name} ccv = {ccv}\r\n              turnClass = {turnClass} />\r\n        <Form {...formProps} />\r\n      </ModalLayout>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default PaymentForm;"],"names":["show","setShow","children","bg","content","modal","open","onClose","className","MotionMain","initial","opacity","scale","transition","duration","ease","animate","classname","replaceStarsOnNumbersCard","numberCard","arr","i","length","join","month","year","name","ccv","turnClass","defaultProp","prop","value","cn","xmlns","width","height","fill","stroke","strokeWidth","strokeLinecap","d","renderOptionMonths","Array","map","item","index","padStart","renderOptionYears","Date","getFullYear","props","useForm","mode","defaultValues","cardNumber","register","formState","errors","isValid","handleSubmit","reset","setCcv","setMonth","setYear","setName","handleSetCardNumber","handleFocus","handleBlur","setShowModal","setShowConfirmModal","onSubmit","htmlFor","type","inputMode","autoComplete","placeholder","required","onChange","maxLength","message","minLength","pattern","e","target","validate","positive","parseInt","getMonth","disabled","replace","onFocus","onBlur","title","useState","setNumberCard","setValueCcv","setTurnCLass","slice","match","substring","normalizeCardNumber","showModal","usePayment","restProps","formProps","ModalLayout"],"sourceRoot":""}