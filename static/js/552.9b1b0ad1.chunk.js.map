{"version":3,"file":"static/js/552.9b1b0ad1.chunk.js","mappings":"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","sources":["webpack://game_store/./src/components/Skeletons/SkeletonRow/styles.module.scss?2600","components/Skeletons/SkeletonRow/index.jsx","webpack://game_store/./src/components/GenresPageComponents/Content/styles.module.scss?2f8c","components/GenresPageComponents/Content/index.jsx","webpack://game_store/./src/components/GenresPageComponents/Slider/styles.module.scss?93af","components/GenresPageComponents/Slider/index.jsx","pages/GenresPage/hooks/useGenres.jsx","utils/setPromisesResolve.js","webpack://game_store/./src/pages/GenresPage/styles.module.scss?a4fb","pages/GenresPage/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"skeleton-row\":\"styles_skeleton-row__UbB9d\",\"loading\":\"styles_loading__9OnJs\"};","import React from 'react';\r\n\r\nimport cn from './styles.module.scss';\r\n\r\nconst SkeletonRow = ({ property }) => {\r\n    return <div className={cn['skeleton-row']} style={{ ...property }}></div>;\r\n};\r\n\r\nexport default SkeletonRow;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"styles_description__E2aCx\"};","import React from 'react';\r\n\r\nimport MotionContainer from 'components/MotionContainer';\r\nimport SkeletonRow from 'components/Skeletons/SkeletonRow';\r\nimport ShortCard from 'components/ui/ShortCard';\r\nimport Slider from 'components/ui/Slider';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport { SwiperSlide } from 'swiper/react';\r\n\r\nimport cn from './styles.module.scss';\r\n\r\nconst Content = ({ isLoading, description, games }) => {\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <SkeletonRow\r\n                    property={{\r\n                        marginTop: '20px',\r\n                        height: '260px',\r\n                    }}\r\n                />\r\n            ) : (\r\n                <AnimatePresence>\r\n                    {description && (\r\n                        <div className={cn.description}>\r\n                            <MotionContainer>\r\n                                {description\r\n                                    ?.slice(3, -4)\r\n                                    .replaceAll('&#39;', \"'\")\r\n                                    .replaceAll('<br />', '\"')}\r\n                            </MotionContainer>\r\n                        </div>\r\n                    )}\r\n                </AnimatePresence>\r\n            )}\r\n\r\n            <Slider\r\n                data={games}\r\n                isLoading={isLoading}\r\n                title=\"games of the genre\"\r\n                renderData={(data) =>\r\n                    data?.map((game) => (\r\n                        <SwiperSlide\r\n                            key={game.id}\r\n                            style={{ maxWidth: '270px', textAlign: 'center' }}\r\n                        >\r\n                            <ShortCard game={{ ...game }} isCanBuy={false} />\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Content;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"swiper\":\"styles_swiper__gGj-2\",\"swiper-slide\":\"styles_swiper-slide__t0KDL\",\"swiper-bg\":\"styles_swiper-bg__t7zbV\",\"swiper-bg__title\":\"styles_swiper-bg__title__eMqVD\",\"swiper-scrollbar\":\"styles_swiper-scrollbar__ZAmP0\",\"swiper-scrollbar-drag\":\"styles_swiper-scrollbar-drag__52cRY\"};","import React from 'react';\r\n\r\nimport 'swiper/css';\r\nimport 'swiper/css/scrollbar';\r\n\r\nimport { Keyboard, Scrollbar } from 'swiper/modules';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\nimport cn from './styles.module.scss';\r\n\r\nconst Slider = ({ genres, setActiveSlide, ...props }) => {\r\n    return (\r\n        <Swiper\r\n            scrollbar={{\r\n                el: `.${cn['swiper-scrollbar']}`,\r\n                draggable: true,\r\n                dragClass: `${cn['swiper-scrollbar-drag']}`,\r\n                snapOnRelease: true,\r\n            }}\r\n            keyboard={{ enabled: true, onlyInViewport: false, pageUpDown: true }}\r\n            modules={[Scrollbar, Keyboard]}\r\n            className={cn.swiper}\r\n            effect=\"fade\"\r\n            fadeEffect={{ crossFade: true }}\r\n            onSlideChange={(e) => setActiveSlide(e.realIndex)}\r\n            {...props}\r\n        >\r\n            {genres?.map((item, index) => (\r\n                <SwiperSlide key={index} className={cn['swiper-slide']}>\r\n                    <div className={cn['swiper-bg']}>\r\n                        <img src={item?.image_background} alt=\"\" loading=\"lazy\" />\r\n\r\n                        <h2 className={cn['swiper-bg__title']}>{item?.name}</h2>\r\n                    </div>\r\n                </SwiperSlide>\r\n            ))}\r\n\r\n            <div className={cn['swiper-scrollbar']}>\r\n                <div className={cn['swiper-scrollbar-drag']}></div>\r\n            </div>\r\n        </Swiper>\r\n    );\r\n};\r\n\r\nexport default Slider;\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { getData } from 'api/getData';\r\nimport { setPromisesResolve } from 'utils/setPromisesResolve';\r\nimport { transformData } from 'utils/transformData';\r\n\r\nimport { PATH } from 'constants/api';\r\n\r\nconst useGenres = () => {\r\n    const [genres, setGenres] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [games, setGames] = useState([]);\r\n    const [activeSlide, setActiveSlide] = useState(0);\r\n    const getGamesFromGenres = (arr) => {\r\n        setPromisesResolve(arr, (item) =>\r\n            getData(PATH.SINGLE_GAME_URL(item.slug), transformData)\r\n        ).then((data) => {\r\n            setGames(data);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        getData(PATH.GAME_GENRES())\r\n            .then((data) => {\r\n                return getData(PATH.GENRE_DESCRIPTION(data?.[activeSlide].id), (genre) => {\r\n                    data[activeSlide].description = genre.description;\r\n                    return data;\r\n                });\r\n            })\r\n            .then((data) => {\r\n                setGenres(data);\r\n                getGamesFromGenres(data?.[activeSlide]?.games);\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let didCancel = false;\r\n        setIsLoading(true);\r\n        if (!genres.length || genres?.[activeSlide].description) return;\r\n\r\n        getData(PATH.GENRE_DESCRIPTION(genres?.[activeSlide].id))\r\n            .then((data) => {\r\n                if (!didCancel) {\r\n                    genres[activeSlide].description = data.description;\r\n                    setGenres([...genres]);\r\n                    getGamesFromGenres(genres?.[activeSlide]?.games);\r\n                }\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n        return () => {\r\n            setGames([]);\r\n            didCancel = true;\r\n        };\r\n    }, [activeSlide]);\r\n\r\n    return {\r\n        genres,\r\n        isLoading,\r\n        games,\r\n        activeSlide,\r\n        setActiveSlide,\r\n    };\r\n};\r\n\r\nexport default useGenres;\r\n","export const setPromisesResolve = (arr, cb) => {\r\n    if (!arr) return Promise.resolve([]);\r\n    const result = [];\r\n    const promises = arr.map(cb);\r\n    return Promise.all(promises).then((data) => {\r\n        for (let i = 0; i < data.length; i++) {\r\n            result.push(data[i]);\r\n        }\r\n\r\n        return result;\r\n    });\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"styles_section__Hvwpk\",\"swiper\":\"styles_swiper__dBG87\",\"swiper-slide\":\"styles_swiper-slide__c7t6k\",\"swiper-bg\":\"styles_swiper-bg__p6Ljz\",\"swiper-bg__title\":\"styles_swiper-bg__title__nkE64\",\"swiper-scrollbar\":\"styles_swiper-scrollbar__fWfjA\",\"swiper-scrollbar-drag\":\"styles_swiper-scrollbar-drag__tNGK0\",\"description\":\"styles_description__7wzZI\"};","import { Content, Slider } from 'components/GenresPageComponents';\r\n\r\nimport useGenres from './hooks/useGenres';\r\n\r\nimport cn from './styles.module.scss';\r\n\r\nconst GenresPage = () => {\r\n    const { genres, isLoading, games, activeSlide, setActiveSlide } = useGenres();\r\n\r\n    return (\r\n        <div className={cn.section}>\r\n            <Slider genres={genres} setActiveSlide={setActiveSlide} />\r\n            <div className=\"container\">\r\n                <Content\r\n                    isLoading={isLoading}\r\n                    description={genres?.[activeSlide]?.description}\r\n                    games={games}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenresPage;\r\n"],"names":["property","className","cn","style","isLoading","description","games","marginTop","height","AnimatePresence","MotionContainer","slice","replaceAll","Slider","data","title","renderData","map","game","maxWidth","textAlign","ShortCard","isCanBuy","id","genres","setActiveSlide","props","scrollbar","el","draggable","dragClass","snapOnRelease","keyboard","enabled","onlyInViewport","pageUpDown","modules","Scrollbar","Keyboard","effect","fadeEffect","crossFade","onSlideChange","e","realIndex","item","index","src","image_background","alt","loading","name","useState","setGenres","setIsLoading","setGames","activeSlide","getGamesFromGenres","arr","cb","Promise","resolve","result","promises","all","then","i","length","push","setPromisesResolve","getData","PATH","slug","transformData","useEffect","genre","finally","didCancel","useGenres"],"sourceRoot":""}