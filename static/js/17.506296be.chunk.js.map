{"version":3,"file":"static/js/17.506296be.chunk.js","mappings":"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","sources":["utils/replaceStarsOnNumbersCard.js","webpack://game_store/./src/components/CartPageComponents/PaymentForm/Card/styles.module.scss?b62a","components/CartPageComponents/PaymentForm/Card/index.jsx","utils/formattingDate.js","webpack://game_store/./src/components/CartPageComponents/PaymentForm/Form/styles.module.scss?218f","components/CartPageComponents/PaymentForm/Form/index.jsx","webpack://game_store/./src/components/CartPageComponents/PaymentForm/styles.module.scss?d758","components/CartPageComponents/PaymentForm/index.jsx","components/ModalLayout/index.jsx"],"sourcesContent":["export const replaceStarsOnNumbersCard =(numberCard) => {\r\n  const arr = ['*', '*', '*', '*', ' ', '*', '*', '*', '*', ' ', '*', '*', '*', '*', ' ', '*', '*', '*', '*']\r\n  if(numberCard){\r\n    for(let i = 0; i < numberCard.length; i++){\r\n      arr[i] = numberCard[i]\r\n    }\r\n  }\r\n  return arr.join('')\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"card-chip\":\"styles_card-chip__7Ij0d\",\"card-bg\":\"styles_card-bg__oW+SE\",\"card-back\":\"styles_card-back__8GpCs\",\"card\":\"styles_card__b+6O3\",\"card-inner\":\"styles_card-inner__TzIZp\",\"turned\":\"styles_turned__C52oI\",\"card-front\":\"styles_card-front__FJiB9\",\"card-glow\":\"styles_card-glow__QGV8X\",\"card-contactless\":\"styles_card-contactless__lcCEj\",\"card-holder\":\"styles_card-holder__J-wcY\",\"card-number\":\"styles_card-number__wexgk\",\"card-valid\":\"styles_card-valid__HkGPt\",\"card-signature\":\"styles_card-signature__SCTuA\",\"card-seccode\":\"styles_card-seccode__MFZ5R\",\"logo\":\"styles_logo__kXeQQ\"};","import { replaceStarsOnNumbersCard } from 'utils/replaceStarsOnNumbersCard';\r\n\r\nimport usePaymentContext from '../hooks/usePaymentContext';\r\n\r\nimport cn from './styles.module.scss';\r\n\r\nconst Card = () => {\r\n    const { numberCard, name, ccv, turnClass, cardValidityPeriod } = usePaymentContext();\r\n\r\n    const defaultProp = (prop, value) => {\r\n        return prop ? prop : value;\r\n    };\r\n\r\n    const { year, month } = cardValidityPeriod;\r\n\r\n    return (\r\n        <div className={cn.card}>\r\n            <div className={`${cn['card-inner']} ${cn[turnClass]}`}>\r\n                <div className={cn['card-front']}>\r\n                    <div className={cn['card-bg']}></div>\r\n\r\n                    <div className={cn['card-glow']}></div>\r\n\r\n                    <div className={cn['card-contactless']}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"46\" height=\"56\">\r\n                            <path\r\n                                fill=\"none\"\r\n                                stroke=\"#f9f9f9\"\r\n                                strokeWidth=\"6\"\r\n                                strokeLinecap=\"round\"\r\n                                d=\"m35,3a50,50 0 0,1 0,50M24,8.5a39,39 0 0,1 0,39M13.5,13.55a28.2,28.5\r\n  0 0,1 0,28.5M3,19a18,17 0 0,1 0,18\"\r\n                            />\r\n                        </svg>\r\n                    </div>\r\n\r\n                    <div className={cn['card-chip']}></div>\r\n\r\n                    <div className={cn['card-holder']}>{defaultProp(name, 'john dow')}</div>\r\n\r\n                    <div className={cn['card-number']}>{replaceStarsOnNumbersCard(numberCard)}</div>\r\n\r\n                    <div className={cn['card-valid']}>\r\n                        {defaultProp(month, 'month')}/{defaultProp(year, 'year')}\r\n                    </div>\r\n                </div>\r\n                <div className={cn['card-back']}>\r\n                    <div className={cn['card-signature']}>{defaultProp(name, 'john dow')}</div>\r\n                    <div className={cn['card-seccode']}>{defaultProp(ccv, '***')}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","export const renderOptionMonths = Array(12)\r\n  .fill(0)\r\n  .map((item, index) => <option key = {index}\r\n                                value = {`${index + 1}`.padStart(2, '0')}>{`${index + 1}`.padStart(2, '0')}</option>)\r\n\r\nexport const renderOptionYears = Array(10)\r\n  .fill(new Date().getFullYear())\r\n  .map((item, index) => <option key = {index} value = {`${item + index}`}>{`${item + index}`}</option>)\r\n\r\n\r\nexport const dateNow = `${new Date().getFullYear()}-${(new Date().getMonth() + 1).toString().padStart(2, '0')}`","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"styles_form__jCzSS\",\"error\":\"styles_error__Lli+T\",\"selects-wrapper\":\"styles_selects-wrapper__Mgh74\",\"select\":\"styles_select__7fAZb\",\"valid-title\":\"styles_valid-title__7nsqy\",\"ccv\":\"styles_ccv__q4e8-\",\"btn-submit\":\"styles_btn-submit__26vRa\",\"pulse\":\"styles_pulse__SEcDz\"};","import React from 'react';\r\n\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport { dateNow, renderOptionMonths, renderOptionYears } from 'utils/formattingDate';\r\n\r\nimport usePaymentContext from '../hooks/usePaymentContext';\r\n\r\nimport cn from './styles.module.scss';\r\n\r\nconst Form = () => {\r\n    let {\r\n        register,\r\n        formState: { errors, isValid },\r\n        handleSubmit,\r\n        reset,\r\n    } = useForm({\r\n        mode: 'onBlur',\r\n        defaultValues: {\r\n            cardNumber: '',\r\n            name: '',\r\n            ccv: '',\r\n            cardValidityPeriod: {\r\n                month: '',\r\n                year: '',\r\n            },\r\n        },\r\n    });\r\n\r\n    const {\r\n        numberCard,\r\n        name,\r\n        ccv,\r\n        setCcv,\r\n        setName,\r\n        handleSetCardNumber,\r\n        handleFocus,\r\n        handleBlur,\r\n        cardValidityPeriod,\r\n        setCardValidityPeriod,\r\n        setIsShowPaymentForm,\r\n        setShowConfirmModal,\r\n    } = usePaymentContext();\r\n\r\n    const onSubmit = () => {\r\n        setIsShowPaymentForm(false);\r\n        setShowConfirmModal(true);\r\n        reset();\r\n    };\r\n\r\n    const setNameField = (e) => {\r\n        let value = e.target.value.replace(/[^a-zA-Z]+/g, '');\r\n        setName(value);\r\n    };\r\n\r\n    const validDate = () => {\r\n        const { year, month } = cardValidityPeriod;\r\n        const [currentYear, currentMonth] = dateNow.split('-');\r\n        if (year && month) {\r\n            return (month && year > currentYear) || (month >= currentMonth && year >= currentYear);\r\n        }\r\n    };\r\n\r\n    const getErrors = () => {\r\n        if (validDate()) {\r\n            const { month, year, ...rest } = errors;\r\n            errors = { ...rest };\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className={cn.form}>\r\n            <label>\r\n                <input\r\n                    type=\"tel\"\r\n                    inputMode=\"numeric\"\r\n                    autoComplete=\"cc-number\"\r\n                    value={numberCard}\r\n                    placeholder={'xxxx xxxx xxxx xxxx'}\r\n                    {...register('cardNumber', {\r\n                        required: 'The field is required',\r\n                        onChange: handleSetCardNumber,\r\n                        pattern: {\r\n                            value: /[\\d| ]{19}/,\r\n                            message: 'The card number must contain 16 digits',\r\n                        },\r\n                    })}\r\n                />\r\n            </label>\r\n\r\n            <div className={cn.error}>\r\n                {errors?.cardNumber && (\r\n                    <p>{errors?.cardNumber?.message || 'you have entered incorrect data'}</p>\r\n                )}\r\n            </div>\r\n\r\n            <p className={cn['valid-title']}>valid thru</p>\r\n\r\n            <div className={cn['selects-wrapper']}>\r\n                <select\r\n                    className={cn.select}\r\n                    {...register('month', {\r\n                        required: 'The fields is required',\r\n                        onChange: (e) =>\r\n                            setCardValidityPeriod({ ...cardValidityPeriod, month: e.target.value }),\r\n                        validate: {\r\n                            validateNumber: () => validDate(),\r\n                        },\r\n                    })}\r\n                >\r\n                    <option value=\"\" disabled=\"\">\r\n                        month\r\n                    </option>\r\n                    {renderOptionMonths}\r\n                </select>\r\n\r\n                <select\r\n                    className={cn.select}\r\n                    {...register('year', {\r\n                        required: 'The fields is required',\r\n                        onChange: (e) =>\r\n                            setCardValidityPeriod({ ...cardValidityPeriod, year: e.target.value }),\r\n                        validate: {\r\n                            validateNumber: () => validDate(),\r\n                        },\r\n                    })}\r\n                >\r\n                    <option value=\"\" disabled=\"\">\r\n                        year\r\n                    </option>\r\n                    {renderOptionYears}\r\n                </select>\r\n            </div>\r\n\r\n            <div className={cn.error}>\r\n                {(getErrors()?.month || getErrors()?.year) && (\r\n                    <p>\r\n                        {errors?.month?.message ||\r\n                            errors?.year?.message ||\r\n                            'check and re-enter the month and year in both fields'}\r\n                    </p>\r\n                )}\r\n            </div>\r\n\r\n            <label>\r\n                <input\r\n                    type=\"text\"\r\n                    inputMode=\"text\"\r\n                    value={name}\r\n                    placeholder=\"name\"\r\n                    {...register('name', {\r\n                        required: 'The field is required',\r\n                        onChange: setNameField,\r\n                        minLength: {\r\n                            value: 2,\r\n                            message: 'The name field must contain more than 2 character',\r\n                        },\r\n                        pattern: {\r\n                            value: /[a-zA-Z]/,\r\n                            message: 'Only Latin characters are allowed',\r\n                        },\r\n                    })}\r\n                />\r\n            </label>\r\n\r\n            <div className={cn.error}>\r\n                {errors?.name && (\r\n                    <p>{errors?.name?.message || 'you have entered incorrect data'}</p>\r\n                )}\r\n            </div>\r\n\r\n            <label>\r\n                <input\r\n                    type=\"text\"\r\n                    className={cn.ccv}\r\n                    inputMode=\"numeric\"\r\n                    placeholder=\"ccv\"\r\n                    value={ccv}\r\n                    onFocus={handleFocus}\r\n                    {...register('ccv', {\r\n                        required: 'The field is required',\r\n                        onChange: setCcv,\r\n                        onBlur: handleBlur,\r\n                        maxLength: {\r\n                            value: 3,\r\n                            message: 'The card number must contain 3 digits',\r\n                        },\r\n                        minLength: {\r\n                            value: 3,\r\n                            message: 'The card number must contain 3 digits',\r\n                        },\r\n                    })}\r\n                />\r\n            </label>\r\n\r\n            <div className={cn.error}>\r\n                {errors?.ccv && <p>{errors?.ccv?.message || 'you have entered incorrect data'}</p>}\r\n            </div>\r\n\r\n            <button\r\n                title=\"Pay\"\r\n                onSubmit={handleSubmit(onSubmit)}\r\n                className={cn['btn-submit']}\r\n                type=\"submit\"\r\n                disabled={!isValid}\r\n            >\r\n                pay\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"styles_wrapper__5pCq7\",\"bg\":\"styles_bg__aTF4y\",\"content\":\"styles_content__mKK-B\",\"card\":\"styles_card__cdO+l\",\"card__info\":\"styles_card__info__KuDrA\"};","import React from 'react';\r\n\r\nimport ModalLayout from '../../ModalLayout';\r\n\r\nimport Card from './Card';\r\nimport Form from './Form';\r\nimport usePaymentContext from './hooks/usePaymentContext';\r\n\r\nimport cn from './styles.module.scss';\r\n\r\nconst PaymentForm = () => {\r\n    const { isShowPaymentForm, setIsShowPaymentForm } = usePaymentContext();\r\n\r\n    return (\r\n        <div className={cn.wrapper}>\r\n            <ModalLayout\r\n                bg={cn.bg}\r\n                content={cn.content}\r\n                show={isShowPaymentForm}\r\n                setShow={setIsShowPaymentForm}\r\n                modal={cn.wrapper}\r\n            >\r\n                <Card />\r\n                <Form />\r\n            </ModalLayout>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PaymentForm;\r\n","import React from 'react';\r\n\r\nimport { Dialog } from '@headlessui/react';\r\nimport MotionContainer from 'components/MotionContainer';\r\n\r\nconst ModalLayout = ({ show, setShow, children, bg, content, modal }) => {\r\n    return (\r\n        <Dialog open={show} onClose={() => setShow(false)} className={modal}>\r\n            <MotionContainer\r\n                initial={{ opacity: 0, scale: 0 }}\r\n                transition={{ duration: 0.2, ease: 'linear' }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                className={bg}\r\n            >\r\n                <Dialog.Panel className={content}>{children}</Dialog.Panel>\r\n            </MotionContainer>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default ModalLayout;\r\n"],"names":["replaceStarsOnNumbersCard","numberCard","arr","i","length","join","usePaymentContext","name","ccv","turnClass","cardValidityPeriod","defaultProp","prop","value","year","month","className","cn","xmlns","width","height","fill","stroke","strokeWidth","strokeLinecap","d","renderOptionMonths","Array","map","item","index","padStart","renderOptionYears","Date","getFullYear","dateNow","getMonth","toString","useForm","mode","defaultValues","cardNumber","register","formState","errors","isValid","handleSubmit","reset","setCcv","setName","handleSetCardNumber","handleFocus","handleBlur","setCardValidityPeriod","setIsShowPaymentForm","setShowConfirmModal","onSubmit","validDate","split","currentYear","currentMonth","getErrors","rest","type","inputMode","autoComplete","placeholder","required","onChange","pattern","message","e","target","validate","validateNumber","disabled","replace","minLength","onFocus","onBlur","maxLength","title","isShowPaymentForm","ModalLayout","bg","content","show","setShow","modal","children","open","onClose","initial","opacity","scale","transition","duration","ease","animate"],"sourceRoot":""}